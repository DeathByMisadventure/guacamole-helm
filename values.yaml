# Configure values of Guacamole

# -- Replica pairs to use for each Guacd and Guacamole pair
replicaCount: 1

guacamole:
  # -- Container Name
  name: guacamole
  image:
    # -- Image repository
    repository: guacamole/guacamole
    # -- Image tag defaults to Chart AppVersion
    tag: "{{ .Chart.AppVersion }}"
    # -- Image pull policy
    pullPolicy: IfNotPresent
  # -- Key-value settings directly passed as environment variables for guacamole configuration
  # @default -- ""
  settings:
    postgresql-ssl-mode: "prefer"
    # both userrequired and auto_create_accounts cannot be true!
    postgresql-user-required: "true"
    postgresql-auto-create-accounts: "false"
    webapp-context: ROOT
  # -- Pod assigned resources
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 200Mi
  # -- Pod security context
  securityContext:
    allowPrivilegeEscalation: false
    # runAsNonRoot: true
    readOnlyRootFilesystem: false
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
  service:
    # -- Service type
    type: ClusterIP
    # -- Service port number
    port: 8080

guacd:
  # -- Container Name
  name: guacd
  image:
    # -- Image repository
    repository: guacamole/guacd
    # -- Image tag defaults to Chart AppVersion
    tag: "{{ .Chart.AppVersion }}"
    # -- Image pull policy
    pullPolicy: IfNotPresent
  # -- Pod assigned resources
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 20Mi
  # -- Pod security context
  securityContext:
    allowPrivilegeEscalation: false
    # runAsNonRoot: true
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
  service:
    # -- Service type
    type: ClusterIP
    # -- Service port number
    port: 4822

postgres:
  # -- Container Name
  name: postgres
  # -- Enable internal postgres database
  enabled: true
  image:
    # -- Image repository
    repository: postgres
    # -- Image tag
    tag: 16-alpine
    # -- Image pull policy
    pullPolicy: IfNotPresent
  # -- Number of replicas
  replicas: 1
  # -- Pod assigned resources
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 20Mi
      ephemeral-storage: "2Gi"
  # -- Pod security context
  securityContext:
    # allowPrivilegeEscalation: false
    # runAsNonRoot: true
    # readOnlyRootFilesystem: false
    # capabilities:
    #   drop:
    #     - ALL
    # seccompProfile:
    #   type: RuntimeDefault
  service:
    # -- Service port number
    port: "5432"
  # -- If internal postgres is disabled, the external database hostname
  hostname: "postgres.lvh.me"

  # -- Database name
  database: "guacamole"
  # -- Postgres username
  user: "guacamole"
  # -- Postgres password
  password: "password"
  pvc:
    # -- Postgres PVC storage request size
    storageRequest: 100Mi
    # -- Storage Class Name for a pre-provisioned PV
    storageClassName:
    # -- Selector to match pre-provisioned PV
    selector:
      # matchLabels:
      #   type: postgres-pv

# -- Image pull secrets
imagePullSecrets: []

# -- Override deployment name
nameOverride: ""
# -- Override deployment name
fullnameOverride: ""

ingress:
  # -- Enable Ingress
  enabled: true
  # -- Ingress class type
  className: nginx
  # -- Ingress annotations
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # appgw.ingress.kubernetes.io/ssl-redirect: "true"
    # kubernetes.io/ingress.class: azure/application-gateway
    # # Enable for modsecurity through an ingress-nginx snippet
    # nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    # nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    # nginx.ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
    # nginx.ingress.kubernetes.io/modsecurity-snippet: |
    #   SecRuleEngine On
    #   SecStatusEngine Off
    #   SecAuditLog /dev/stdout
    #   SecAuditLogFormat JSON
    #   SecAuditLogParts ABCFHKZ
    #   SecAuditEngine RelevantOnly
    #   SecPcreMatchLimit 500000
    #   SecPcreMatchLimitRecursion 500000
    #   SecAction "id:900200,phase:1,nolog,pass,t:none,setvar:tx.allowed_methods=GET HEAD POST OPTIONS PUT PATCH DELETE"
    #   SecRuleRemoveById 920440
  host: guac.lvh.me
  # -- Enable TLS
  tls:
    # - hosts:
    #   - guac.lvh.me
    #   secretName: external-tls-cert

certificateTrust:
  # -- Override the JKS store password, if blank the password defaults to 'changeit'
  storePassword:
  # -- Chain of 0 to many PEM certificates which will be imported into the trust store
  # @default -- ""
  chain: |

ingress-nginx:
  # -- Enable the ingress-nginx module dependency if not enabled in the cluster
  enabled: false
  controller:
    # -- Ingress-NGINX Configuration for MODSECURITY OWASP Protection
    # Comment out this entire section to disable the WAF
    config:
      enable-modsecurity: "true"
      enable-owasp-modsecurity-crs: "true"
      modsecurity-transaction-id: "$request_id"
      modsecurity-snippet: |
        SecRuleEngine On
        SecStatusEngine Off
        SecAuditLog /dev/stdout
        SecAuditLogFormat JSON
        SecAuditLogParts ABCFHKZ
        SecAuditEngine RelevantOnly
        SecPcreMatchLimit 500000
        SecPcreMatchLimitRecursion 500000
        SecAction "id:900200,phase:1,nolog,pass,t:none,setvar:tx.allowed_methods=GET HEAD POST OPTIONS PUT PATCH DELETE"
        SecRuleRemoveById 920440
